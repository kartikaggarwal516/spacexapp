{"version":3,"sources":["Assets/Images/logout_img.png","Assets/Components/Login.js","Assets/Components/Header.js","Assets/Actions/Actions.js","Assets/Components/Home.js","Assets/Components/PageOrder.js","Assets/Components/Launches.js","Assets/Components/Rockets.js","Assets/Components/Dragons.js","App.js","serviceWorker.js","Assets/Reducers/InfoReducer.js","Assets/Reducers/LaunchesReducer.js","Assets/Reducers/RocketsReducer.js","Assets/Reducers/DragonsReducer.js","Assets/Reducers/CombineReducers.js","Assets/Reducers/PageReducer.js","index.js"],"names":["module","exports","loginurl","Login","state","users","errors","user","pwd","sbt","submitHandler","e","preventDefault","target","value","u","length","setState","console","log","localStorage","setItem","JSON","stringify","props","history","push","pathname","getUserData","axios","get","then","response","data","catch","error","finally","this","className","src","alt","width","onSubmit","type","placeholder","Component","Header","useHistory","loggeduser","getItem","parse","to","role","Badge","variant","onClick","removeItem","logout","INFO","getInfo","info","payload","getLaunches","launches","handlePageChange","page","getRockets","rockets","getDragons","dragons","url","Home","summary","founded","employees","launch_sites","test_sites","vehicles","ceo","coo","cto","cto_propulsion","connect","store","dispatch","bindActionCreators","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","bind","lurl","Launches","offset","prevprops","map","l","i","Card","style","key","Img","links","mission_patch_small","height","Body","mission_name","Title","rocket","rocket_name","rocket_type","launch_year","launch_site","site_name","launch_success","href","video_link","Button","rurl","Rockets","r","Text","description","meters","diameter","mass","kg","boosters","success_rate_pct","engines","number","version","propellant_1","propellant_2","wikipedia","curl","Dragons","d","name","crew_capacity","height_w_trunk","sidewall_angle_deg","orbit_duration_yr","heat_shield","material","size_meters","temp_degrees","dev_partner","thrusters","n","pods","fuel_1","fuel_2","thrust","kN","App","basename","exact","path","component","Boolean","window","location","hostname","match","defaultState","combineReducers","action","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.229ff97c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout_img.6cd2fc7e.png\";","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport \"../Styles/login.css\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nconst loginurl = \"https://run.mocky.io/v3/689bee42-50f3-4da7-9046-64bde3a0317b\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        users: [],\r\n        errors: {\r\n            user: \"\",\r\n            pwd: \"\",\r\n            sbt: \"\"\r\n        }\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault()\r\n        const user = e.target[0].value\r\n        const pwd = e.target[1].value\r\n\r\n        const { users, errors } = this.state\r\n        let u = 0\r\n\r\n        if (user.length == 0 || pwd.length == 0) {\r\n            errors.sbt = \"Please fill all the fields\"\r\n            this.setState({ errors })\r\n            return\r\n        }\r\n\r\n        while (u < users.length) {\r\n            if (users[u].user != user)\r\n                u++\r\n            else {\r\n                if (users[u].pwd != pwd) {\r\n                    errors.pwd = \"Wrong Password\"\r\n                    break\r\n                }\r\n                else {\r\n                    console.log(\"user\", user, \"pwd\", pwd)\r\n                    localStorage.setItem(\"user\", JSON.stringify(users[u]))\r\n                    this.props.history.push({\r\n                        pathname: '/home'\r\n                    })                    \r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        if (u == users.length)\r\n            errors.user = \"User does not exist\"\r\n\r\n        this.setState({ errors })\r\n    }\r\n\r\n    getUserData = () => {\r\n        axios.get(loginurl)\r\n            .then((response) => {\r\n                // handle success                \r\n                this.setState({ users: response.data })                \r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData()\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"login\">\r\n                <img src=\"https://www.spacexwiki.com/static/media/spacex-logo.9250222f.svg\" alt=\"SpaceX logo\" width=\"350px\" />\r\n                <form className=\"SignIn-form\" onSubmit={this.submitHandler}>\r\n                    <center><h3>Sign In</h3></center>\r\n                    <div className=\"SI-form-group\">\r\n                        <label >Username</label>\r\n                        <input type=\"text\" placeholder=\"Enter Username\"></input>\r\n                        {errors.user.length > 0 && <div className=\"errmsg\">{errors.user}</div>}\r\n                    </div>\r\n                    <div className=\"SI-form-group\">\r\n                        <label >Password</label>\r\n                        <input type=\"password\" placeholder=\"Enter password\"></input>\r\n                        {errors.pwd.length > 0 && <div className=\"errmsg\">{errors.pwd}</div>}\r\n                    </div>\r\n\r\n                    <div className=\"SI-form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n                        {errors.sbt.length > 0 && <div className=\"errmsg\">{errors.sbt}</div>}\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from \"react\"\r\nimport \"../Styles/header.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { Badge } from \"react-bootstrap\"\r\nimport logout from \"../Images/logout_img.png\"\r\n\r\nconst Header = props => {\r\n    const history = useHistory()\r\n    const loggeduser = localStorage.getItem(\"user\")\r\n    const user = JSON.parse(loggeduser)\r\n    console.log(\"loggeduser\", user)\r\n\r\n    if (!user) {\r\n        history.push({\r\n            pathname: '/'\r\n        })\r\n    }\r\n\r\n    const signout = () => {\r\n        localStorage.removeItem(\"user\")\r\n    }\r\n    return (\r\n        <div className=\"hcontainer\">\r\n            <div className=\"hlogo\">\r\n                <Link to=\"/home\">\r\n                    <img src=\"https://www.spacexwiki.com/static/media/spacex-logo.9250222f.svg\" alt=\"SpaceX logo\" width=\"280px\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"hmenu\">\r\n                <Link to=\"/launches\">LAUNCHES</Link>\r\n                <Link to=\"/rockets\">ROCKETS</Link>\r\n                <Link to=\"/dragons\">DRAGONS</Link>\r\n                {user && user.role == \"user\"\r\n                    ? <Badge variant=\"secondary\" className=\"badge\">{user.role}</Badge>\r\n                    : <Badge variant=\"warning\"> {user.role}</Badge>\r\n                }\r\n                <h5>{user && user.user}</h5>\r\n                <Link to=\"/\" onClick={signout}>\r\n                    <img src={logout} alt=\"logout img\" width=\"20px\" className=\"logout\" />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","//2.action types\r\nexport const INFO = \"COMPANY_INFO\"\r\nexport const LAUNCHES = \"LAUNCHES_INFO\"\r\nexport const SELECT_PAGE = \"SELECT_PAGE\"\r\nexport const ROCKETS = \"ROCKETS_INFO\"\r\nexport const DRAGONS = \"DRAGONS_INFO\"\r\n\r\n//3.Action Creators\r\nexport const getInfo = info => {\r\n    return{\r\n        type: INFO,\r\n        payload: info\r\n    }\r\n}\r\n\r\nexport const getLaunches = launches => {\r\n    return{\r\n        type: LAUNCHES,\r\n        payload: launches\r\n    }\r\n}\r\n\r\nexport const handlePageChange = page => {    \r\n    return {\r\n        type: SELECT_PAGE,\r\n        payload: page\r\n    }\r\n}\r\n\r\nexport const getRockets = rockets => {\r\n    return{\r\n        type: ROCKETS,\r\n        payload: rockets\r\n    }\r\n}\r\n\r\nexport const getDragons = dragons => {\r\n    return{\r\n        type: DRAGONS,\r\n        payload: dragons\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport Header from \"./Header\"\r\nimport axios from \"axios\"\r\nimport \"../Styles/home.css\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getInfo} from \"../Actions/Actions\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst url = \"https://api.spacexdata.com/v3/info\"\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    getUserData = () => {\r\n        axios.get(url)\r\n            .then((response) => {\r\n                // handle success                \r\n                this.props.getInfo(response.data)                \r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData()\r\n    }\r\n\r\n    render() {\r\n        const { info } = this.props        \r\n        return (\r\n            <div className=\"home\">\r\n                <Header {...this.props} />\r\n                <div className=\"homebox\">\r\n                    <div className=\"about\">\r\n                        <h2>ABOUT SPACEX</h2>\r\n                        <p>{info.summary}</p>\r\n                    </div>\r\n                    <div className=\"cinfo\">\r\n                        <h2>COMPANY INFO</h2>\r\n                        <ul>\r\n                            <li>Founded: {info.founded}</li>\r\n                            <li>Employees: {info.employees}</li>\r\n                            <li>Launch Sites: {info.launch_sites}</li>\r\n                            <li>Test Sites: {info.test_sites}</li>\r\n                            <li>Vehicles: {info.vehicles}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"cleaders\">\r\n                        <h2>COMPANY LEADERSHIP</h2>\r\n                        <ul>\r\n                            <li>CEO: {info.ceo}</li>\r\n                            <li>COO: {info.coo}</li>\r\n                            <li>CTO: {info.cto}</li>\r\n                            <li>CTO of Propulsion: {info.cto_propulsion}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return{\r\n        info: store.info\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {getInfo}, dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)","import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport {handlePageChange} from \"../Actions/Actions\"\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst PageOrder = props => {\r\n  return(\r\n    <div className=\"pagebox\">\r\n        <Pagination\r\n          activePage={props.activePage}\r\n          itemsCountPerPage={3}\r\n          totalItemsCount={150}\r\n          pageRangeDisplayed={5}\r\n          onChange={props.handlePageChange.bind(this)}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return{\r\n    activePage: store.activePage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {handlePageChange}, dispatch\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageOrder)","import React, { Component } from \"react\"\r\nimport Header from \"./Header\"\r\nimport axios from \"axios\"\r\nimport \"../Styles/launches.css\"\r\nimport { Card, Button } from \"react-bootstrap\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getLaunches} from \"../Actions/Actions\"\r\nimport { connect } from \"react-redux\"\r\nimport PageOrder from \"./PageOrder\"\r\n\r\nconst lurl = \"https://api.spacexdata.com/v3/launches?limit=3&offset=\"\r\n\r\nclass Launches extends Component {\r\n    state = {        \r\n    }\r\n\r\n    getUserData = () => {\r\n        let offset = (this.props.activePage-1)*3\r\n        axios.get(`${lurl}${offset}`)\r\n            .then((response) => {\r\n                // handle success                                \r\n                this.props.getLaunches(response.data)\r\n                console.log(\"launches\", this.props.launches)\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData()\r\n    }\r\n    componentDidUpdate(prevprops) {\r\n        if(prevprops.activePage != this.props.activePage)\r\n        this.getUserData()\r\n    }\r\n\r\n    render() {\r\n        const { launches } = this.props\r\n        return (\r\n            <div className=\"launches\">\r\n                <Header />                \r\n                <h1>SPACEX LAUNCHES</h1>\r\n                <div className=\"launchbox\">\r\n                    {launches.map((l, i) => {\r\n                        return (\r\n                            <Card style={{ width: '18rem' }} key={i} className=\"lcard\" >\r\n                                <Card.Img variant=\"top\" src={l.links.mission_patch_small} height=\"150px\" />\r\n                                <Card.Body>\r\n                                    <h2>{l.mission_name}</h2>\r\n                                    <Card.Title>Mission Details:</Card.Title>\r\n                                    <ul>\r\n                                        <li>Rocket Name: {l.rocket.rocket_name}</li>\r\n                                        <li>Rocket Type: {l.rocket.rocket_type}</li>\r\n                                        <li>Launch Year: {l.launch_year} </li>\r\n                                        <li>Launch Site: {l.launch_site.site_name} </li>\r\n                                        <li>Launch: {l.launch_success ? \"Success\" : \"Failure\"} </li>\r\n                                    </ul>\r\n                                    <a href={l.links.video_link}>\r\n                                        <Button variant=\"primary\">Watch Video</Button>                                    \r\n                                    </a>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pagebox\">\r\n                    <PageOrder />\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return{\r\n        launches: store.launches,\r\n        activePage: store.activePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {getLaunches}, dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Launches)","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport Header from \"./Header\"\r\nimport \"../Styles/rockets.css\"\r\nimport { Card,Button } from \"react-bootstrap\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getRockets} from \"../Actions/Actions\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst rurl = \"https://api.spacexdata.com/v3/rockets\"\r\n\r\nclass Rockets extends Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    getUserData = () => {\r\n        axios.get(rurl)\r\n            .then((response) => {\r\n                // handle success                \r\n                this.props.getRockets(response.data)                \r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData()\r\n    }\r\n\r\n    render() {\r\n        const { rockets } = this.props\r\n        return (\r\n            <div className=\"rockets\">\r\n                <Header />                \r\n                <h1>SPACEX ROCKETS</h1>\r\n                <div className=\"rocketbox\">\r\n                {rockets.map((r, i) => {\r\n                    return (\r\n                        <Card style={{ width: '18rem' }} key={i} className=\"rcard\" >\r\n                            <Card.Body>\r\n                                <h2>{r.rocket_name}</h2>\r\n                                <Card.Text>\r\n                                    {r.description}                                \r\n                                </Card.Text>\r\n                                <h4>Specs</h4>\r\n                                <ul>\r\n                                    <li>Height: {`${r.height.meters}m`} </li>\r\n                                    <li>Diameter: {`${r.diameter.meters}m`} </li>\r\n                                    <li>Mass: {`${r.mass.kg}kg`} </li>\r\n                                    <li>Booster: {r.boosters} </li>\r\n                                    <li>Success Rate: {r.success_rate_pct} </li>\r\n                                </ul>\r\n                                <h4>Engines</h4>\r\n                                <ul>\r\n                                    <li>Engines: {r.engines.number} </li>\r\n                                    <li>Type: {r.engines.type} </li>\r\n                                    <li>Version: {r.engines.version} </li>\r\n                                    <li>Propellant 1: {r.engines.propellant_1} </li>\r\n                                    <li>Propellant 2: {r.engines.propellant_2} </li>\r\n                                </ul>\r\n                                <a href={r.wikipedia}>\r\n                                    <Button variant=\"primary\">Read about {r.rocket_name} on Wikipedia </Button>\r\n                                </a>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )\r\n                })}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return{\r\n        rockets: store.rockets\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {getRockets}, dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Rockets)","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport \"../Styles/dragons.css\"\r\nimport { Button, Card } from \"react-bootstrap\"\r\nimport Header from \"./Header\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport {getDragons} from \"../Actions/Actions\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst curl = \"https://api.spacexdata.com/v3/dragons\"\r\n\r\nclass Dragons extends Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    getUserData = () => {\r\n        axios.get(curl)\r\n            .then((response) => {\r\n                // handle success                \r\n                this.props.getDragons(response.data)                \r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData()\r\n    }\r\n\r\n    render() {\r\n        const { dragons } = this.props\r\n        return (\r\n            <div className=\"dragons\">\r\n                <Header />                \r\n                <h1>SPACEX DRAGONS</h1>\r\n                <div className=\"dbox\">\r\n                    {dragons.map((d, i) => {\r\n                        return (\r\n                            <Card style={{ width: '18rem' }} key={i} className=\"rcard\" >\r\n                                <Card.Body>\r\n                                    <h2>{d.name}</h2>\r\n                                    <Card.Text>\r\n                                        {d.description}\r\n                                    </Card.Text>\r\n                                    <h4>Specs</h4>\r\n                                    <ul>\r\n                                        <li>Crew Capacity: {d.crew_capacity} </li>\r\n                                        <li>Height w/Trunk: {`${d.height_w_trunk.meters}m`} </li>\r\n                                        <li>Diameter: {`${d.diameter.meters}m`} </li>\r\n                                        <li>Sidewall Angle: {d.sidewall_angle_deg} </li>\r\n                                        <li>Orbit Duration: {`${d.orbit_duration_yr} years`} </li>\r\n                                    </ul>\r\n                                    <h4>Heat Shield</h4>\r\n                                    <ul>\r\n                                        <li>Material: {d.heat_shield.material} </li>\r\n                                        <li>Size: {d.heat_shield.size_meters} </li>\r\n                                        <li>Temperature: {d.heat_shield.temp_degrees} </li>\r\n                                        <li>Partner: {d.heat_shield.dev_partner} </li>\r\n                                    </ul>\r\n                                    <h4>Thrusters</h4>\r\n                                    {d.thrusters.map((n, i) => {\r\n                                        return (\r\n                                            <ul key ={i}>\r\n                                                <li>Type: {n.type} </li>\r\n                                                <li>Pods: {n.pods} </li>\r\n                                                <li>Fuel 1: {n.fuel_1} </li>\r\n                                                <li>Fuel 2: {n.fuel_2} </li>\r\n                                                <li>Thrust: {`${n.thrust.kN} kN`} </li>\r\n                                            </ul>\r\n                                        )\r\n                                    })}\r\n                                    <a href={d.wikipedia}>\r\n                                        <Button variant=\"primary\">Read about {d.name} on Wikipedia </Button>\r\n                                    </a>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return{\r\n        dragons: store.dragons\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators(\r\n        {getDragons}, dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dragons)","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./Assets/Components/Login\"\nimport Home from \"./Assets/Components/Home\"\nimport Launches from \"./Assets/Components/Launches\"\nimport Rockets from \"./Assets/Components/Rockets\"\nimport Dragons from \"./Assets/Components/Dragons\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename=\"spacexapp\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/launches\" component={Launches} />\n        <Route exact path=\"/rockets\" component={Rockets} />\n        <Route exact path=\"/dragons\" component={Dragons} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {INFO} from \"../Actions/Actions\"\r\n\r\nconst defaultState = []\r\nexport default function InfoReducer(state = defaultState, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case INFO : {\r\n            state = action.payload\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}","import {LAUNCHES} from \"../Actions/Actions\"\r\n\r\nconst defaultState = []\r\nexport default function InfoReducer(state = defaultState, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case LAUNCHES : {\r\n            state = action.payload\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}","import {ROCKETS} from \"../Actions/Actions\"\r\n\r\nconst defaultState = []\r\nexport default function InfoReducer(state = defaultState, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ROCKETS : {\r\n            state = action.payload\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}","import {DRAGONS} from \"../Actions/Actions\"\r\n\r\nconst defaultState = []\r\nexport default function InfoReducer(state = defaultState, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case DRAGONS : {\r\n            state = action.payload\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}","import React from 'react'\r\nimport info from './InfoReducer'\r\nimport launches from \"./LaunchesReducer\"\r\nimport page from \"./PageReducer\"\r\nimport rockets from \"./RocketsReducer\"\r\nimport dragons from \"./DragonsReducer\"\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\nexport default combineReducers({\r\n    info: info,\r\n    launches:launches,\r\n    activePage:page,\r\n    rockets:rockets,\r\n    dragons:dragons\r\n})\r\n","import {SELECT_PAGE} from \"../Actions/Actions\"\r\n\r\nconst defaultState = 1;\r\nexport default function PageReducer(state = defaultState, action){\r\n    switch(action.type) {\r\n        case SELECT_PAGE: {            \r\n            state = action.payload\r\n            return state\r\n        }       \r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport {Provider} from \"react-redux\"\nimport reducer from \"./Assets/Reducers/CombineReducers\"\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}